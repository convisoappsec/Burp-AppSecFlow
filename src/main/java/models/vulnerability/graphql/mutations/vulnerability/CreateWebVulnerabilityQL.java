package models.vulnerability.graphql.mutations.vulnerability;

import com.google.gson.Gson;
import models.graphql.GraphQLMutation;
import models.graphql.mutation.GraphQLMutations;
import models.vulnerability.Evidence;
import models.vulnerability.Issue;
import models.vulnerability.graphql.mutations.CreateIssueQL;
import org.apache.http.HttpEntity;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import utilities.Util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;

public class CreateWebVulnerabilityQL extends CreateIssueQL {

    public CreateWebVulnerabilityQL(Issue issue) {
        super(issue);
    }

    @Override
    protected void prepareQuery() {
        System.out.println(this.issue.toString());
        if (this.issue.getInvaded()) {
            this.setQueryCreateWebVulnerabilityInvaded();
        } else {
            this.setQueryCreateWebVulnerabilityNotInvaded();
        }
    }

    private void setQueryCreateWebVulnerabilityNotInvaded() {
        this.query = String.format(new GraphQLMutations().getQueryCreateWebVulnerabilityNotInvaded(),
                this.issue.getAnalysisId(),
                this.issue.getVulnerabilityTemplateId(),
                this.issue.getImpact(),
                this.issue.getProbability(),
                Util.jsonSafeString(this.issue.getDescription()),
                Util.jsonSafeString(this.issue.getImpactResume()),
                this.issue.getWebProtocol(),
                this.issue.getWebMethod(),
                this.issue.getWebUrl(),
                this.issue.getWebParameters(),
                Util.jsonSafeString(this.issue.getWebSteps()),
                this.issue.getWebRequest(),
                this.issue.getWebResponse(),
                this.issue.getNullByEvidencesListSize());
    }

    private void setQueryCreateWebVulnerabilityInvaded() {
        this.query = String.format(new GraphQLMutations().getQueryCreateWebVulnerabilityInvaded(),
                this.issue.getAnalysisId(),
                this.issue.getVulnerabilityTemplateId(),
                this.issue.getImpact(),
                this.issue.getProbability(),
                Util.jsonSafeString(this.issue.getDescription()),
                Util.jsonSafeString(this.issue.getImpactResume()),
                this.issue.getWebProtocol(),
                this.issue.getWebMethod(),
                this.issue.getWebUrl(),
                this.issue.getWebParameters(),
                Util.jsonSafeString(this.issue.getWebSteps()),
                this.issue.getWebRequest(),
                this.issue.getWebResponse(),
                Util.jsonSafeString(this.issue.getInvadedEnvironmentDescription()),
                this.issue.getNullByEvidencesListSize());
    }




}
