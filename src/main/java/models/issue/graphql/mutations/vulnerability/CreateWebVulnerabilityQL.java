package models.issue.graphql.mutations.vulnerability;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import models.graphql.mutation.GraphQLMutations;
import models.issue.Issue;
import models.issue.graphql.mutations.CreateIssueQL;
import utilities.Util;

public class CreateWebVulnerabilityQL extends CreateIssueQL {

    public CreateWebVulnerabilityQL(Issue issue) {
        super(issue);
    }

    @Override
    protected void prepareQuery() {
        if (this.issue.getInvaded()) {
            this.setQueryCreateWebVulnerabilityInvaded();
        } else {
            this.setQueryCreateWebVulnerabilityNotInvaded();
        }
    }

    private void setQueryCreateWebVulnerabilityNotInvaded() {

        this.query = String.format(GraphQLMutations.mutationCreateWebVulnerabilityNotInvaded,
                this.issue.getAnalysisId(),
                this.issue.getVulnerabilityTemplateId(),
                this.issue.getImpact(),
                this.issue.getProbability(),
                Util.jsonSafeString(this.issue.getDescription()),
                Util.jsonSafeString(this.issue.getImpactResume()),
                Util.jsonSafeString(this.issue.getWebProtocol()),
                this.issue.getWebMethod(),
                Util.jsonSafeString(this.issue.getWebUrl()),
                Util.jsonSafeString(this.issue.getWebParameters()),
                Util.jsonSafeString(this.issue.getWebSteps()),
                Util.jsonSafeString(this.issue.getWebRequest()),
                Util.jsonSafeString(this.issue.getWebResponse()),
                this.issue.getNullByEvidencesListSize());
    }

    private void setQueryCreateWebVulnerabilityInvaded() {
        this.query = String.format(GraphQLMutations.mutationCreateWebVulnerabilityInvaded,
                this.issue.getAnalysisId(),
                this.issue.getVulnerabilityTemplateId(),
                this.issue.getImpact(),
                this.issue.getProbability(),
                Util.jsonSafeString(this.issue.getDescription()),
                Util.jsonSafeString(this.issue.getImpactResume()),
                Util.jsonSafeString(this.issue.getWebProtocol()),
                this.issue.getWebMethod(),
                Util.jsonSafeString(this.issue.getWebUrl()),
                Util.jsonSafeString(this.issue.getWebParameters()),
                Util.jsonSafeString(this.issue.getWebSteps()),
                Util.jsonSafeString(this.issue.getWebRequest()),
                Util.jsonSafeString(this.issue.getWebResponse()),
                Util.jsonSafeString(this.issue.getInvadedEnvironmentDescription()),
                this.issue.getNullByEvidencesListSize());
    }


}
