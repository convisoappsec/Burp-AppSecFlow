package services;

import burp.IBurpExtenderCallbacks;
import burp.IExtensionHelpers;
import com.google.gson.Gson;
import models.graphql.GraphQLResponse;
import models.services_manager.ServicesManager;
import models.vulnerability.Vulnerability;
import models.vulnerability.graphql.CreateWebVulnerabilityQL;
import models.vulnerability.graphql.CreatedWebVulnerabilityQL;
import org.apache.http.auth.AuthenticationException;
import org.apache.http.client.HttpResponseException;

import java.io.FileNotFoundException;

public class VulnerabilityService extends Service {

    public VulnerabilityService(IBurpExtenderCallbacks callbacks, IExtensionHelpers helpers, ServicesManager servicesManager) {
        super(callbacks, helpers, servicesManager);
    }

    public CreatedWebVulnerabilityQL postVulnerability(Vulnerability vulnerability) throws FileNotFoundException, AuthenticationException, HttpResponseException {

        GraphQLService graphQLService = this.servicesManager.getGraphQLService();
        CreateWebVulnerabilityQL newVulnerability = new CreateWebVulnerabilityQL(vulnerability);

        String response = graphQLService.executeQueryMultipart(newVulnerability.getHttpEntity());
        GraphQLResponse graphQLResponse = new GraphQLResponse(response);
        return new Gson().fromJson(graphQLResponse.getContentOfData("createWebVulnerability"), CreatedWebVulnerabilityQL.class);

    }
}
